{
version: 3,
sources: [
"src/style-settings.js",
"src/common-utils.js",
"src/document-wait.js",
"src/custom-style-interface.js",
"entrypoints/custom-style-interface.js"
],
names: [
"nativeShadow",
"window",
"nativeCssVariables",
"calcCssVariables",
"settings",
"navigator",
"userAgent",
"match",
"CSS",
"supports",
"ShadyCSS",
"undefined",
"nativeCss",
"module$src$style_settings.nativeCssVariables",
"updateNativeProperties",
"element",
"properties",
"p",
"style",
"removeProperty",
"setProperty",
"readyPromise",
"whenReady",
"resolveFn",
"documentWait",
"validateFn",
"requestAnimationFrame",
"callback",
"Promise",
"resolve",
"document",
"readyState",
"addEventListener",
"then",
"transformFn",
"constructor",
"CustomStyleInterface",
"enqueueDocumentValidation",
"addCustomStyle",
"push",
"getStyleForCustomStyle",
"customStyle",
"processStyles",
"cs",
"i",
"length",
"styleToTransform",
"prototype",
"Object",
"defineProperties",
"get",
"set",
"fn",
"needsEnqueue",
"customStyleInterface",
"prepareTemplate",
"styleSubtree",
"styleElement",
"styleDocument",
"body",
"getComputedStyleValue",
"property",
"value",
"getComputedStyle",
"getPropertyValue",
"trim"
],
mappings: "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",
file: "custom-style-interface.min.js",
sourcesContent: [
"/** @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved. This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as part of the polymer project is also subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt */ 'use strict'; export let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']); export let nativeCssVariables; /** * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings */ function calcCssVariables(settings) { if (settings && settings['shimcssproperties']) { nativeCssVariables = false; } else { // chrome 49 has semi-working css vars, check if box-shadow works // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782 // However, shim css custom properties are only supported with ShadyDOM enabled, // so fall back on native if we do not detect ShadyDOM // Edge 15: custom properties used in ::before and ::after will also be used in the parent element // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/ nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/) && window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)')); } } if (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) { nativeCssVariables = window.ShadyCSS.nativeCss; } else if (window.ShadyCSS) { calcCssVariables(window.ShadyCSS); // reset window variable to let ShadyCSS API take its place window.ShadyCSS = undefined; } else { calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']); }",
"/** @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved. This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as part of the polymer project is also subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt */ 'use strict'; import { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js'; /** * @param {Element} element * @param {Object=} properties */ export function updateNativeProperties(element, properties) { // remove previous properties for (let p in properties) { // NOTE: for bc with shim, don't apply null values. if (p === null) { element.style.removeProperty(p); } else { element.style.setProperty(p, properties[p]); } } } /** * @param {Element} element * @param {string} property * @return {string} */ export function getComputedStyleValue(element, property) { /** * @const {string} */ const value = window.getComputedStyle(element).getPropertyValue(property); if (!value) { return ''; } else { return value.trim(); } } /** * return true if `cssText` contains a mixin definition or consumption * @param {string} cssText * @return {boolean} */ export function detectMixin(cssText) { const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText); // reset state of the regexes MIXIN_MATCH.lastIndex = 0; VAR_ASSIGN.lastIndex = 0; return has; } ",
"/** @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved. This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as part of the polymer project is also subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt */ 'use strict'; /** @type {Promise<void>} */ let readyPromise = null; /** @type {?function(?function())} */ let whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null; /** @type {function()} */ let resolveFn; /** * @param {?function()} callback */ export default function documentWait(callback) { requestAnimationFrame(function() { if (whenReady) { whenReady(callback) } else { if (!readyPromise) { readyPromise = new Promise((resolve) => {resolveFn = resolve}); if (document.readyState === 'complete') { resolveFn(); } else { document.addEventListener('readystatechange', () => { if (document.readyState === 'complete') { resolveFn(); } }); } } readyPromise.then(function(){ callback && callback(); }); } }); } ",
"/** @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved. This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as part of the polymer project is also subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt */ 'use strict'; import documentWait from './document-wait.js'; /** * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}} */ export let CustomStyleProvider; const SEEN_MARKER = '__seenByShadyCSS'; const CACHED_STYLE = '__shadyCSSCachedStyle'; /** @type {?function(!HTMLStyleElement)} */ let transformFn = null; /** @type {?function()} */ let validateFn = null; /** This interface is provided to add document-level <style> elements to ShadyCSS for processing. These styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles In addition, these styles may also need to be processed for @apply rules and CSS Custom Properties To add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})` In addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`. This function will be called when calculating styles. An example usage of the document-level styling api can be found in `examples/document-style-lib.js` @unrestricted */ export default class CustomStyleInterface { constructor() { /** @type {!Array<!CustomStyleProvider>} */ this['customStyles'] = []; this['enqueued'] = false; } /** * Queue a validation for new custom styles to batch style recalculations */ enqueueDocumentValidation() { if (this['enqueued'] || !validateFn) { return; } this['enqueued'] = true; documentWait(validateFn); } /** * @param {!HTMLStyleElement} style */ addCustomStyle(style) { if (!style[SEEN_MARKER]) { style[SEEN_MARKER] = true; this['customStyles'].push(style); this.enqueueDocumentValidation(); } } /** * @param {!CustomStyleProvider} customStyle * @return {HTMLStyleElement} */ getStyleForCustomStyle(customStyle) { if (customStyle[CACHED_STYLE]) { return customStyle[CACHED_STYLE]; } let style; if (customStyle['getStyle']) { style = customStyle['getStyle'](); } else { style = customStyle; } return style; } /** * @return {!Array<!CustomStyleProvider>} */ processStyles() { const cs = this['customStyles']; for (let i = 0; i < cs.length; i++) { const customStyle = cs[i]; if (customStyle[CACHED_STYLE]) { continue; } const style = this.getStyleForCustomStyle(customStyle); if (style) { // HTMLImports polyfill may have cloned the style into the main document, // which is referenced with __appliedElement. const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style); if (transformFn) { transformFn(styleToTransform); } customStyle[CACHED_STYLE] = styleToTransform; } } return cs; } } CustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle; CustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle; CustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles; Object.defineProperties(CustomStyleInterface.prototype, { 'transformCallback': { /** @return {?function(!HTMLStyleElement)} */ get() { return transformFn; }, /** @param {?function(!HTMLStyleElement)} fn */ set(fn) { transformFn = fn; } }, 'validateCallback': { /** @return {?function()} */ get() { return validateFn; }, /** * @param {?function()} fn * @this {CustomStyleInterface} */ set(fn) { let needsEnqueue = false; if (!validateFn) { needsEnqueue = true; } validateFn = fn; if (needsEnqueue) { this.enqueueDocumentValidation(); } }, } }) /** @typedef {{ * customStyles: !Array<!CustomStyleProvider>, * addCustomStyle: function(!CustomStyleProvider), * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement, * findStyles: function(), * transformCallback: ?function(!HTMLStyleElement), * validateCallback: ?function() * }} */ export let CustomStyleInterfaceInterface; ",
"/** @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved. This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as part of the polymer project is also subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt */ 'use strict'; import CustomStyleInterface from '../src/custom-style-interface.js'; import {getComputedStyleValue, updateNativeProperties} from '../src/common-utils.js'; import {nativeCssVariables, nativeShadow} from '../src/style-settings.js'; const customStyleInterface = new CustomStyleInterface(); if (!window.ShadyCSS) { window.ShadyCSS = { /** * @param {HTMLTemplateElement} template * @param {string} elementName * @param {string=} elementExtends */ prepareTemplate(template, elementName, elementExtends) {}, // eslint-disable-line no-unused-vars /** * @param {Element} element * @param {Object=} properties */ styleSubtree(element, properties) { customStyleInterface.processStyles(); updateNativeProperties(element, properties); }, /** * @param {Element} element */ styleElement(element) { // eslint-disable-line no-unused-vars customStyleInterface.processStyles(); }, /** * @param {Object=} properties */ styleDocument(properties) { customStyleInterface.processStyles(); updateNativeProperties(document.body, properties); }, /** * @param {Element} element * @param {string} property * @return {string} */ getComputedStyleValue(element, property) { return getComputedStyleValue(element, property); }, nativeCss: nativeCssVariables, nativeShadow: nativeShadow } } window.ShadyCSS.CustomStyleInterface = customStyleInterface;"
]
}
